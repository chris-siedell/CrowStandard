crow v2 draft - future.txt
23 April 2018


Idea: 4095 byte payloads
------------------------
The reserved bit is there. Is this necessary? There will always be a limit at
which commands will have to be broken up. Larger packets can take a long time
to transmit at slow baudrates.


Idea: keep alive responses
--------------------------
These would be responses that keep the transaction alive while the service
completes the command. This seems to violate the design princple that
responses should be quick to keep the line open.


Idea: multi-packet commands and responses
-----------------------------------------
These existed (in part) as intermediate responses in v1, which were removed in
v2 for simplicity, and also with the idea that command-response pairs should
be quick and concise.


Idea: CRC option
----------------
CRC would be optional for devices, only Fletcher-16 would be required.
What would the header format be? A v2 header with a reserved bit set
and wrapped with an additional CRC? 


Idea: alarm flag
----------------
This would compensate for the lack of device initiated communications. Each
port would have an alarm flag. When any alarm flag is raised the device
implementation would set a reserved bit of the response header. The host could
then use admin commands to query which flag(s) are raised, at which point the
host could alert client code using callbacks.


Idea: status byte
-----------------
This extends the alarm flag idea further by allowing the device to send a
status byte at any time. The device would need to monitor the line to know
when there is no open transaction in order to minimize the risk of collision.
Still, collisions will eventually happen, and handling them might ruin the
basic simplicity of the Crow protocol. On the other hand, when there is only
one device using separate rx and tx lines with a full-duplex host, there is no
risk at all. The status byte would include the device address, an alarm flag,
and possibly another bit or two used to indicate if the device is coming on
line, rebooting, shutting down, or entering sleep mode.



